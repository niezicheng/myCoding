Promise

Promise.resolve();		将p转成Promise对象,并且Promise对象的状态为resolve状态
Promise.reject();
Promise.all([p1,p2,p3]);   //参数Promise对象全部为resolve状态才返回为resolve状态Promise对象
Promise.race([p1,p2,p3]);	//使用参数中响应快的状态数据，赛跑机制
Promise.finally(()=>{});


类	语法糖--构造函数-原型对象
继承 extends
	class Animal{
		//构造器
		constructor(name,age){
			//实例属性
			this.name = name;
			this.age = age;
		}

		//实例的方法
		sayName(){
			console.log(this.name);
		}

		//使用static修饰的为类方法或静态方法	只有类Animal本才能调用，实例不能调用
		static say(){
			console.log('say');
		}
	}

Animal.staticAttr = '静态属性';

a、类实例调用的属性及方法
实例属性	constructor构造器中的属性
实例的方法	类内部没有使用static修饰的方法

b、只有类自身才能调用静态属性及方法,实例无法调用
静态属性	在类外部使用类名.属性名声明的属性
静态方法	类内部使用static修饰的方法

类继承
	Dog Animal

1.extends关键字
2.属性的继承
3.方法的继承
class Animal{}
class Dog extends Animal{}

//实现了静态属性，静态方法，实例方法的继承
//在Dog类的构造器中调用Animal的构造器，传递参数

//继承两条线
子类对象继承父类对象
子类的原型对象继承父类的原型对象

父类的静态属性和静态方法，子类可以调用，Dog继承Animal中的静态属性和静态方法
父类中写的实例方法，在子类的原型中可以获取到。子类实例可以调用。